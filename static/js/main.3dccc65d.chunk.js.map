{"version":3,"sources":["components/home/index.js","components/about/index.js","components/aboutMe/index.js","components/geneticAlgorithmText/DNA.js","components/geneticAlgorithmText/index.js","components/linearRegressionOLS/index.js","utils/index.js","components/linearRegressionGD/index.js","components/perceptron/Perceptron.js","styledComponents/index.js","components/perceptron/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Link","to","About","dist_default","effect","role","aria-label","rel","href","target","data-tip","AboutMe","react_avatar_lib_default","name","src","size","place","delayShow","Component","newChar","c","Math","floor","random","String","fromCharCode","DNA","num","Object","classCallCheck","this","genes","fitness","i","join","score","length","charAt","pow","partner","child","midpoint","round","mutationRate","GeneticAlgorithm","_this","possibleConstructorReturn","getPrototypeOf","call","state","totalGenerations","totalPopulation","population","calcFitness","evolve","index","r","probability","setTimeout","_this2","slice","sum","forEach","x","map","partnerA","pickOne","partnerB","crossoverB","mutate","sort","b","setState","some","getPhrase","_this3","style","color","fontStyle","key","LinearRegressionOLS","width","min","window","innerWidth","innerHeight","height","points","handleClick","bind","assertThisInitialized","e","rect","refs","canvas","getBoundingClientRect","clientX","left","y","clientY","top","getContext","clearRect","point","context","beginPath","arc","PI","fillStyle","fill","drawPoint","_this$calculateLinear","calculateLinearRegression","m","moveTo","lineTo","stroke","clearCanvas","drawPoints","drawLine","xAverage","yAverage","numerator","denominator","newPoint","getMousePos","prevState","concat","toConsumableArray","canvasParent","clientWidth","draw","textAlign","ref","border","marginTop","onClick","lib_default","Node","inline","formula","mapRange","in_min","in_max","out_min","out_max","LinearRegressionGD","gradientDescent","_this$state","_this$state2","mapPointToDisplay","displayB","mapPointToCalc","error","intervalId","setInterval","clearInterval","PerceptronModel","weights","math","arguments","undefined","_len","inputs","Array","_key","guess","apply","neuron","Button","styled","button","_templateObject","Perceptron","trainNeuron","lineWidth","label","strokeStyle","_ref","train","forceUpdate","push","modelcanvas","ctx","font","drawCircle","radius","fromX","fromY","toX","toY","fillText","toString","drawModel","filter","_ref2","App","BrowserRouter","Provider","fontSize","fontWeight","Route","exact","path","component","GeneticAlgorithmText","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3dccc65d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <p><Link to=\"/GeneticAlgorithmText\" className='home-link'>Genetic algorithm with text finding example</Link>\r\n            </p>\r\n            <p><Link to=\"/LinearRegressionOLS\" className='home-link'>Linear Regression with Ordinary Least\r\n                Squares</Link></p>\r\n            <p><Link to=\"LinearRegressionGD\" className='home-link'>Linear Regression with Gradient Descent</Link></p>\r\n            <p><Link to=\"/Perceptron\" className='home-link'>Clasification with Perceptron</Link></p>\r\n            <hr/>\r\n            <p><Link to=\"/about\" className='home-link'>About storage</Link></p>\r\n            <p><Link to=\"/aboutme\" className='home-link'>About me</Link></p>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport \"./about.css\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <ReactTooltip effect=\"solid\"/>\r\n            <h3>About <span role=\"img\" aria-label=\"clapping hands sing\">👏</span></h3>\r\n            <p>This is personal storage for programs that have something in common with machine learning.</p>\r\n            <p>Everything here is heavily inspired by\r\n                <a rel=\"noopener noreferrer\"\r\n                   href=\"https://www.youtube.com/user/shiffman/playlists?sort=dd&view=50&shelf_id=16\" target=\"_blank\"\r\n                   className=\"link\" data-tip=\"Check Shiffman out!\"> The Coding Train</a> youtube channel.\r\n            </p>\r\n            <p>I'm using this repository to practise node, react, design and machine learning skills.</p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React, {Component} from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\nclass AboutMe extends Component {\r\n    //https://image.ibb.co/dHjzeo/tomaszdomagala.jpg\r\n    //https://image.ibb.co/m5oEC8/noweprof.png\r\n\r\n    render() {\r\n        return (<div className=\"container\">\r\n            <h3>About me</h3>\r\n            <div className=\"row\">\r\n                <div className=\"col mb-2\" data-tip=\"Not really professional but I really like this photo\">\r\n                    <Avatar name=\"Tomasz\"\r\n                            src=\"https://image.ibb.co/m5oEC8/noweprof.png\" size={300}/>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <h3>Hello I am Tomasz!</h3>\r\n                    <p>I am a young full stack developer and machine learning enthusiast. I finally decided to start\r\n                        studying machine learning seriously. I hope that I will find enough determination\r\n                        <span role=\"img\" aria-label=\"smiling face with smile and cold sweat\"> 😅</span>\r\n                        <br/>Wish me luck guys!</p>\r\n                    <hr/>\r\n                    <p><a rel=\"noopener noreferrer\" target=\"_blank\" className=\"link\"\r\n                          href=\"https://github.com/TomaszDomagala\">My GitHub</a></p>\r\n                    <p><a rel=\"noopener noreferrer\" target=\"_blank\" className=\"link\"\r\n                          href=\"https://www.linkedin.com/in/tomaszdomagala/\">LinkedIn profile</a></p>\r\n                    <p><a href=\"mailto:tomasz.domagala.contact@gmail.com\" className=\"link\">Message me!</a></p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <ReactTooltip effect=\"solid\" place=\"bottom\" delayShow={1000}/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default AboutMe;","function newChar() {\r\n    let c = Math.floor(Math.random() * 59) + 64;\r\n    if (c === 64) c = 32;\r\n    return String.fromCharCode(c);\r\n}\r\n\r\nclass DNA {\r\n    constructor(num) {\r\n        this.genes = [];\r\n        this.fitness = 0;\r\n        for (let i = 0; i < num; i++) {\r\n            this.genes[i] = newChar()\r\n        }\r\n    }\r\n\r\n    getPhrase() {\r\n        return this.genes.join('');\r\n    }\r\n\r\n    calcFitness(target) {\r\n        let score = 0;\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            if (this.genes[i] === target.charAt(i)) {\r\n                score++;\r\n            }\r\n        }\r\n        //exponential fitness is probably better\r\n        this.fitness = Math.pow(score, 5);\r\n    }\r\n\r\n    crossoverA(partner) {\r\n        let child = new DNA(this.genes.length);\r\n        let midpoint = Math.floor(Math.random() * this.genes.length);\r\n\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            if (i > midpoint) child.genes[i] = this.genes[i];\r\n            else child.genes[i] = partner.genes[i];\r\n        }\r\n        return child;\r\n    }\r\n\r\n    crossoverB(partner) {\r\n        let child = new DNA(this.genes.length);\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            if (Math.round(Math.random()))\r\n                child.genes[i] = partner.genes[i];\r\n            else\r\n                child.genes[i] = this.genes[i];\r\n        }\r\n        return child;\r\n    }\r\n\r\n    mutate(mutationRate) {\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            if (Math.random() < mutationRate) {\r\n                this.genes[i] = newChar();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default DNA","import React, {Component} from 'react';\r\n\r\nimport DNA from \"./DNA\";\r\n\r\n\r\nclass GeneticAlgorithm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            totalGenerations: 1,\r\n            mutationRate: 0.01,\r\n            totalPopulation: 200,\r\n            population: [],\r\n            target: 'genetic algorithm'\r\n        };\r\n        let population = [];\r\n        for (let i = 0; i < this.state.totalPopulation; i++) {\r\n            population[i] = new DNA(this.state.target.length);\r\n            population[i].calcFitness(this.state.target)\r\n        }\r\n        this.state.population = population;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.evolve()\r\n    }\r\n\r\n    pickOne(population) {\r\n        let index = 0;\r\n        let r = Math.random();\r\n\r\n        while (r > 0) {\r\n            r -= population[index].probability;\r\n            index++;\r\n        }\r\n        return population[index - 1]\r\n    }\r\n\r\n    async evolve() {\r\n        setTimeout(() => {\r\n            let population = this.state.population.slice();\r\n            let sum = 0;\r\n            population.forEach(x => {\r\n                sum += x.fitness\r\n            });\r\n            population.forEach(x => x.probability = x.fitness / sum);\r\n            population = population.map(x => {\r\n                let partnerA = this.pickOne(population);\r\n                let partnerB = this.pickOne(population);\r\n                let child = partnerA.crossoverB(partnerB);\r\n                child.mutate(this.state.mutationRate);\r\n                child.calcFitness(this.state.target);\r\n                return child;\r\n            });\r\n\r\n            population.sort((a, b) => b.fitness - a.fitness);\r\n            this.setState({population: population, totalGenerations: this.state.totalGenerations + 1});\r\n            if (!population.some(x => x.getPhrase() === this.state.target)) {\r\n                this.evolve()\r\n            }\r\n\r\n        }, 5);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Genetic Algorithm with text finding example <span style={{color: '#C2185B'}}>/WIP</span></h3>\r\n                <p>population: {this.state.totalPopulation} mutation rate: {this.state.mutationRate * 100}% total\r\n                    generations: {this.state.totalGenerations} </p>\r\n                {this.state.population.map((x, i) => {\r\n                    if (x.getPhrase() === this.state.target) {\r\n                        return (<p style={{color: '#C2185B', fontStyle: 'italic'}} key={i}>{x.getPhrase()}</p>)\r\n                    } else {\r\n                        return (<p key={i}>{x.getPhrase()}</p>)\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneticAlgorithm;","import React, {Component} from 'react';\r\nimport './linearRegressionOLS.css'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport MathJax from 'react-mathjax';\r\n\r\n\r\nclass LinearRegressionOLS extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            width: Math.min(600, window.innerWidth - 100, window.innerHeight - 100),\r\n            height: Math.min(600, window.innerWidth - 100, window.innerHeight - 100),\r\n            points: []\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    getMousePos(e) {\r\n        const canvas = this.refs.canvas;\r\n        const rect = canvas.getBoundingClientRect();\r\n        return {\r\n            x: e.clientX - rect.left,\r\n            y: e.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    clearCanvas() {\r\n        const canvas = this.refs.canvas;\r\n        if (!canvas) return;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    drawPoint(point) {\r\n        const canvas = this.refs.canvas;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.arc(point.x, point.y, 3, 0, 2 * Math.PI);\r\n        context.fillStyle = \"#C2185B\";\r\n        context.fill();\r\n    }\r\n\r\n    drawPoints() {\r\n        this.state.points.forEach(point => this.drawPoint(point));\r\n    }\r\n\r\n    drawLine() {\r\n        const canvas = this.refs.canvas;\r\n        if (!canvas || this.state.points < 2) return;\r\n        const context = canvas.getContext(\"2d\");\r\n        const {m, b} = this.calculateLinearRegression();\r\n        context.moveTo(0, b);\r\n        context.lineTo(canvas.width, m * canvas.width + b);\r\n        context.stroke();\r\n    }\r\n\r\n    draw() {\r\n        this.clearCanvas();\r\n        this.drawPoints();\r\n        this.drawLine();\r\n    }\r\n\r\n    calculateLinearRegression() {\r\n        let xAverage = 0, yAverage = 0;\r\n        this.state.points.forEach(point => {\r\n            xAverage += point.x;\r\n            yAverage += point.y;\r\n        });\r\n        xAverage /= this.state.points.length;\r\n        yAverage /= this.state.points.length;\r\n\r\n        let numerator = 0, denominator = 0;\r\n        this.state.points.forEach(point => {\r\n            const x = point.x, y = point.y;\r\n            numerator += (x - xAverage) * (y - yAverage);\r\n            denominator += (x - xAverage) * (x - xAverage);\r\n        });\r\n\r\n        const m = numerator / denominator;\r\n        const b = yAverage - m * xAverage;\r\n        return {m, b}\r\n    }\r\n\r\n\r\n    handleClick(e) {\r\n        const newPoint = this.getMousePos(e);\r\n        this.setState(prevState => ({\r\n            points: [...prevState.points, newPoint]\r\n        }));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //TODO aktualnie canvas jest renderowany dwa razy: raz z width z this.state a drugi z refa fajnie jakby to usprawnic dla clean codu\r\n        this.setState({width: Math.min(this.refs.canvasParent.clientWidth, 1110)});\r\n    }\r\n\r\n\r\n    render() {\r\n        this.draw();\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Linear Regression with Ordinary Least Squares</h3>\r\n                <p className={this.state.points.length < 2 ? \"m-0 tip\" : \"m-0\"}>Create data points by clicking on\r\n                    canvas</p>\r\n                <div style={{textAlign: \"center\"}}>\r\n\r\n                    <div ref=\"canvasParent\">\r\n                        <canvas ref=\"canvas\" width={this.state.width} height={this.state.height}\r\n                                style={{border: \"1px solid #E0E0E0\", marginTop: \"10px\"}}\r\n                                onClick={this.handleClick}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <h5>What just happened?</h5>\r\n                <p>We've created a line that minimizes distances between points and this line in order to predict new\r\n                    data points.</p>\r\n\r\n                <h5>How it works:</h5>\r\n                <p>Our line is in <MathJax.Node inline formula={'y=mx + b'}/> form. To find m\r\n                    and b values we can use two formulas:</p>\r\n\r\n                <div className='row'>\r\n                    <div className='col-auto'><MathJax.Node\r\n                        formula={'m=\\\\frac{\\\\sum_{i=0}^n (x_i-\\\\bar  x)(y_i-\\\\bar y)}{\\\\sum_{i=0}^n(x_i-\\\\bar x)^2}'}/>\r\n                    </div>\r\n                    <div className='col-auto'>\r\n                        <MathJax.Node className=\"pt-3\" formula={'b=\\\\bar y - m\\\\bar x'}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <p>This is good method only for linear data sets. Check\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\" data-tip=\"Anscombe's quartet\"\r\n                       href=\"https://en.wikipedia.org/wiki/Anscombe%27s_quartet#/media/File:Anscombe%27s_quartet_3.svg\"\r\n                    > this</a> out to see what i mean.</p>\r\n\r\n                <h5>Resources:</h5>\r\n                <p>Daniel Shiffman's videos on this topic\r\n                    <a rel=\"noopener noreferrer\" className=\"link\" target=\"_blank\"\r\n                       href=\"https://www.youtube.com/watch?v=szXbuO3bVRk\"> part 1 </a>\r\n                    and <a rel=\"noopener noreferrer\" className=\"link\" target=\"_blank\"\r\n                           href=\"https://www.youtube.com/watch?v=_cXuvTQl090\"> part\r\n                        2</a>.\r\n                </p>\r\n                <p>More on <a rel=\"noopener noreferrer\" className=\"link\" target=\"_blank\"\r\n                              href=\"https://scholar.google.pl/scholar?q=Ordinary+Least+Squares&hl=pl&as_sdt=0&as_vis=1&oi=scholart\">\r\n                    Google Scholar</a>.</p>\r\n                <ReactTooltip effect=\"solid\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinearRegressionOLS;\r\n","export const mapRange = (x, in_min, in_max, out_min, out_max) => {\r\n    return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n};","import React, {Component} from 'react';\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {mapRange} from '../../utils'\r\n\r\nlet m = 0, b = 0;\r\n\r\nclass LinearRegressionGD extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            width: Math.min(600, window.innerWidth - 100, window.innerHeight - 100),\r\n            height: Math.min(600, window.innerWidth - 100, window.innerHeight - 100),\r\n            points: []\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.gradientDescent = this.gradientDescent.bind(this);\r\n    }\r\n\r\n    mapPointToCalc(point) {\r\n        const {width, height} = this.state;\r\n        const {x, y} = point;\r\n        return {\r\n            x: mapRange(x, 0, width, 0, width / 10),\r\n            y: mapRange(y, 0, height, 0, height / 10)\r\n        }\r\n    }\r\n\r\n    mapPointToDisplay(point) {\r\n        const {width, height} = this.state;\r\n        const {x, y} = point;\r\n        return {\r\n            x: mapRange(x, 0, width / 10, 0, width),\r\n            y: mapRange(y, 0, height / 10, 0, height)\r\n        }\r\n    }\r\n\r\n\r\n    getMousePos(e) {\r\n        const canvas = this.refs.canvas;\r\n        const rect = canvas.getBoundingClientRect();\r\n        return {\r\n            x: e.clientX - rect.left,\r\n            y: e.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    clearCanvas() {\r\n        const canvas = this.refs.canvas;\r\n        if (!canvas) return;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    drawPoint(point) {\r\n        const canvas = this.refs.canvas;\r\n        if (!canvas) return;\r\n\r\n        const context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.arc(point.x, point.y, 3, 0, 2 * Math.PI);\r\n        context.fillStyle = \"#C2185B\";\r\n        context.fill();\r\n\r\n    }\r\n\r\n    drawPoints() {\r\n        this.state.points.forEach(point => this.drawPoint(this.mapPointToDisplay(point)));\r\n    }\r\n\r\n    drawLine() {\r\n        const canvas = this.refs.canvas;\r\n        if (!canvas || this.state.points.length < 2) return;\r\n        const context = canvas.getContext(\"2d\");\r\n        const displayB = mapRange(b, 0, this.state.height / 10, 0, this.state.height);\r\n        context.moveTo(0, Math.round(displayB));\r\n        context.lineTo(Math.round(canvas.width), Math.round(m * canvas.width + displayB));\r\n        context.stroke();\r\n    }\r\n\r\n    draw() {\r\n        this.clearCanvas();\r\n        this.drawLine();\r\n        this.drawPoints();\r\n    }\r\n\r\n    handleClick(e) {\r\n        const newPoint = this.getMousePos(e);\r\n\r\n        this.setState(prevState => ({points: [...prevState.points, this.mapPointToCalc(newPoint)]}));\r\n        this.draw();\r\n    }\r\n\r\n    gradientDescent() {\r\n        if (this.state.points.length < 2) return;\r\n\r\n        const m_learning_rate = 0.0001;\r\n        const b_learning_rate = 0.05;\r\n        this.state.points.forEach(point => {\r\n            const {x, y} = point;\r\n            const guess = m * x + b;\r\n            const error = y - guess;\r\n            m += error * x * m_learning_rate;\r\n            b += error * b_learning_rate;\r\n        });\r\n\r\n        this.draw();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const intervalId = setInterval(this.gradientDescent, 10);\r\n        this.setState({width: Math.min(this.refs.canvasParent.clientWidth, 1100), intervalId});\r\n\r\n\r\n    }\r\n\r\n    //TODO naprawic zeby lepiej dzialalo z reactem bo teraz to zjebalem ostro\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.intervalId);\r\n        m = 0;\r\n        b = 0;\r\n    }\r\n\r\n    render() {\r\n        this.draw();\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Linear Regression with Gradient Descent</h3>\r\n                <p className={this.state.points.length < 2 ? \"m-0 tip\" : \"m-0\"}>Create data points by clicking on\r\n                    canvas</p>\r\n                <div style={{textAlign: \"center\"}}>\r\n\r\n                    <div ref=\"canvasParent\">\r\n                        <canvas ref=\"canvas\" width={this.state.width} height={this.state.height}\r\n                                style={{border: \"1px solid #E0E0E0\", marginTop: \"10px\"}}\r\n                                onClick={this.handleClick}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <ReactTooltip effect=\"solid\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinearRegressionGD;\r\n","import math from 'mathjs'\r\n\r\n\r\nconst activation_function = x => {\r\n    if (x > -0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return -1;\r\n    }\r\n};\r\n\r\nclass PerceptronModel {\r\n    constructor() {\r\n        this.weights = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            this.weights[i] = math.random(-1, 1)\r\n        }\r\n    }\r\n\r\n    //Feedforward kind of\r\n    guess(...inputs) {\r\n        let sum = 0;\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            sum += this.weights[i] * inputs[i]\r\n        }\r\n        const output = activation_function(sum);\r\n        return output;\r\n    }\r\n\r\n    //Backpropagation\r\n    train(target, ...inputs) {\r\n        let guess = this.guess(...inputs);\r\n        let error = target - guess;\r\n        const learning_rate = 0.1;\r\n\r\n        for (let i = 0; i < this.weights.length; i++) {\r\n            this.weights[i] += error * inputs[i] * learning_rate;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PerceptronModel","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  /* Adapt the colours based on primary prop */\r\n  \r\n  background: transparent;\r\n  color: #212121;\r\n\r\n  font-size: 1em;\r\n  margin: 0;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  border: 2px solid #212121;\r\n  \r\n  transition: all 200ms ease-out;\r\n  &:active{\r\n      color: white;\r\n      background: #C2185B;\r\n      border-color: #C2185B;\r\n      transition: none;\r\n  }\r\n  &:focus{\r\n      outline: none;\r\n  }\r\n`;\r\n","import React, {Component} from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport PerceptronModel from './Perceptron.js'\r\nimport {Button} from \"../../styledComponents\";\r\n\r\nlet neuron;\r\n\r\nclass Perceptron extends Component {\r\n    constructor() {\r\n        super();\r\n        neuron = new PerceptronModel();\r\n        this.state = {\r\n            width: Math.min(600, window.innerWidth - 100, window.innerHeight - 100),\r\n            height: Math.min(600, window.innerWidth - 100, window.innerHeight - 100),\r\n            points: []\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.trainNeuron = this.trainNeuron.bind(this);\r\n    }\r\n\r\n    getMousePos(e) {\r\n        const canvas = this.refs.canvas;\r\n        const rect = canvas.getBoundingClientRect();\r\n        return {\r\n            x: e.clientX - rect.left,\r\n            y: e.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    clearCanvas() {\r\n        const canvas = this.refs.canvas;\r\n        if (!canvas) return;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    drawPoint(point) {\r\n        const canvas = this.refs.canvas;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.arc(point.x, point.y, 3, 0, 2 * Math.PI);\r\n        context.lineWidth = 2;\r\n        if (point.label === 1) {\r\n            if (point.label === neuron.guess(point.x, point.y)) {\r\n                context.strokeStyle = \"#009688\"\r\n            } else {\r\n                context.strokeStyle = \"#C2185B\"\r\n            }\r\n            context.stroke();\r\n        } else {\r\n            if (point.label === neuron.guess(point.x, point.y)) {\r\n                context.fillStyle = \"#009688\"\r\n            } else {\r\n                context.fillStyle = \"#C2185B\"\r\n            }\r\n            context.fill();\r\n        }\r\n    }\r\n\r\n    drawPoints() {\r\n        this.state.points.forEach(point => this.drawPoint(point));\r\n    }\r\n\r\n    drawLine() {\r\n        const canvas = this.refs.canvas;\r\n        if (!canvas || this.state.points < 2) return;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.strokeStyle = \"#000\";\r\n        context.lineWidth = 1;\r\n        context.moveTo(0, 0);\r\n        context.lineTo(canvas.width, canvas.height);\r\n        context.stroke();\r\n    }\r\n\r\n    draw() {\r\n        this.clearCanvas();\r\n        this.drawLine();\r\n        this.drawPoints();\r\n    }\r\n\r\n    trainNeuron() {\r\n        this.state.points.forEach(({x, y, label}) => {\r\n            neuron.train(label, x, y);\r\n        });\r\n        this.forceUpdate()\r\n    }\r\n\r\n    handleClick(e) {\r\n    }\r\n\r\n    componentDidMount() {\r\n        //TODO aktualnie canvas jest renderowany dwa razy: raz z width z this.state a drugi z refa fajnie jakby to usprawnic dla clean codu\r\n        const points = [];\r\n        const {height} = this.state;\r\n        const width = Math.min(this.refs.canvasParent.clientWidth, 1110);\r\n\r\n        for (let i = 0; i < 100; i++) {\r\n            const x = Math.floor(Math.random() * this.refs.canvasParent.clientWidth) + 1;\r\n            const y = Math.floor(Math.random() * this.state.height) + 1;\r\n            const label = x * height / width > y ? 1 : -1;\r\n            points.push({x, y, label})\r\n        }\r\n        this.setState({width, points}, this.draw);\r\n    }\r\n\r\n    drawModel() {\r\n        const canvas = this.refs.modelcanvas;\r\n        if (!canvas) return;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.font = \"30px serif\";\r\n        ctx.textAlign = \"center\";\r\n        const drawCircle = (width, height, radius) => {\r\n            ctx.beginPath();\r\n            ctx.arc(width, height, radius, 0, 2 * Math.PI);\r\n            ctx.stroke();\r\n        };\r\n        const drawLine = (fromX, fromY, toX, toY) => {\r\n            ctx.moveTo(fromX, fromY);\r\n            ctx.lineTo(toX, toY);\r\n            ctx.stroke();\r\n        };\r\n\r\n        drawCircle(50, 50, 30);\r\n        drawCircle(50, 150, 30);\r\n        drawCircle(150, 100, 30);\r\n        ctx.fillText(\"x\", 50, 60);\r\n        ctx.fillText(\"y\", 50, 160);\r\n        ctx.fillText(\"Σ\", 150, 110);\r\n        ctx.fillText('out', 250, 108);\r\n        drawLine(80, 50, 125, 85);\r\n        drawLine(80, 150, 125, 115);\r\n        drawLine(180, 100, 220, 100);\r\n        ctx.font = \"16px serif\";\r\n\r\n        ctx.fillText((Math.round(neuron.weights[0] * 100) / 100).toString(), 110, 50);\r\n        ctx.fillText((Math.round(neuron.weights[1] * 100) / 100).toString(), 110, 160)\r\n    }\r\n\r\n    render() {\r\n        this.draw();\r\n        this.drawModel();\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Points Clasification with Perceptron</h3>\r\n                <div className='text-center'>\r\n                    <div ref=\"canvasParent\">\r\n                        <canvas ref=\"canvas\" width={this.state.width} height={this.state.height}\r\n                                style={{border: \"1px solid #E0E0E0\", marginTop: \"10px\"}}\r\n                                onClick={this.handleClick}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className='col'>\r\n                        <p>Points with wrong classification: {this.state.points.filter(({x, y, label}) => label !== neuron.guess(x, y)).length}</p>\r\n                    </div>\r\n                    <div className='col text-center'>\r\n                        <Button onClick={this.trainNeuron}>Train!</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <canvas ref=\"modelcanvas\" width={300} height={200}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <ReactTooltip effect=\"solid\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Perceptron;\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport MathJax from 'react-mathjax';\r\nimport Home from './components/home';\r\nimport About from './components/about';\r\nimport AboutMe from './components/aboutMe'\r\n\r\nimport GeneticAlgorithmText from './components/geneticAlgorithmText'\r\nimport LinearRegressionOLS from \"./components/linearRegressionOLS\"\r\nimport LinearRegressionGD from \"./components/linearRegressionGD\"\r\nimport Perceptron from './components/perceptron'\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <MathJax.Provider>\r\n                        <nav className=\"navbar justify-content-center mb-4\">\r\n                            <Link to=\"/\">\r\n                            <span className=\"navbar-brand mb-0 h1 text-center title\"\r\n                                  style={{fontSize: \"1.5rem\", fontWeight: \"bold\"}}>\r\n                                ML Storage\r\n                            </span>\r\n                            </Link>\r\n                        </nav>\r\n\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route path=\"/MachineLearningStorage\" component={Home}/>\r\n                        <Route path=\"/about\" component={About}/>\r\n                        <Route path=\"/aboutme\" component={AboutMe}/>\r\n                        <Route path=\"/GeneticAlgorithmText\" component={GeneticAlgorithmText}/>\r\n                        <Route path=\"/LinearRegressionOLS\" component={LinearRegressionOLS}/>\r\n                        <Route path=\"/LinearRegressionGD\" component={LinearRegressionGD}/>\r\n                        <Route path=\"/Perceptron\" component={Perceptron}/>\r\n                    </MathJax.Provider>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}